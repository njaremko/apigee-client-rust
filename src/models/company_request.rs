/*
 * Companies API
 *
 * Manage companies in an organization.  A company is a collection of developers managed as a single entity. A company can be any grouping that is appropriate to your organization, for example, business unit, product line, or division. Grouping developers into companies is useful when your goal is to work with multiple developers associated under a single corporate entity for billing purposes, for example.  Companies are optional. It not required that the developers in your organization are associated with a company. Note that a developer is always a single entity, uniquely identified by the email element.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CompanyRequest : Company.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompanyRequest {
    /// Name of the company. See <a href=\"https://docs.apigee.com/api-platform/reference/naming-guidelines\">naming restrictions</a>. Required when creating a company.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Display name for the company.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Name/value formatted attributes used to extend the default company profile. **Note**: With Apigee Edge for Public Cloud, the custom attribute limit is 18.
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Vec<crate::models::CompanyAttribute>>,
}

impl CompanyRequest {
    /// Company.
    pub fn new() -> CompanyRequest {
        CompanyRequest {
            name: None,
            display_name: None,
            attributes: None,
        }
    }
}


