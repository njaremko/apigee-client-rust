/*
 * Company Developers API
 *
 * Associate developers with a company.  The company developer creates apps on behalf of the company. Any apps created by a company developer are associated with the company and known as \"company apps.\"  A developer must exist before you can associate them with a company.  When you add a developer to a company, you specify the developer's email and assign the developer a role. Company developer roles are enforced by the client app that you build using the API, not by Apigee. Therefore, when you retrieve a list of company apps on behalf of a developer, it is your code that checks the developer's role and displays the capabilities appropriate for that role. You typically create an admin role to allow a company developer to add other developers, delete company apps, and so on. Company developers are mapped to developers in your organization using the developer email as a key. The mapping associates the developer with the company and adds a role. The company developer entity simply stores an email address and a role while the organization developer entity that it maps to can have a wide variety of attributes defined.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompanyDeveloper {
    /// Email address of the developer.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// Role that may be used for access control to app information by a client, but which is not enforced by Apigee.
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<String>,
}

impl CompanyDeveloper {
    pub fn new() -> CompanyDeveloper {
        CompanyDeveloper {
            email: None,
            role: None,
        }
    }
}


