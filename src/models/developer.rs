/*
 * Developers API
 *
 * Developers must register with an organization on Apigee Edge. After they are registered, developers register their apps, choose the APIs they want to use, and receive the unique API credentials (consumer keys and secrets) needed to access your APIs.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Developer : Developer details.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Developer {
    /// Output only. List of apps associated with the developer.
    #[serde(rename = "apps", skip_serializing_if = "Option::is_none")]
    pub apps: Option<Vec<String>>,
    /// List of attributes that can be used to extend the default developer profile. With Apigee Edge for Public Cloud, the custom attribute limit is 18.
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Vec<crate::models::Attribute>>,
    /// Output only. List of companies associated with the developer.
    #[serde(rename = "companies", skip_serializing_if = "Option::is_none")]
    pub companies: Option<Vec<String>>,
    /// Output only. Time the developer was created in milliseconds since epoch.
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
    /// Output only. Email address of the developer that created the developer.
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    /// ID of the developer. Generated internally by Apigee and not guaranteed to stay consistent over time. 
    #[serde(rename = "developerId", skip_serializing_if = "Option::is_none")]
    pub developer_id: Option<String>,
    /// Email address of the developer. This value is used to uniquely identify the developer in Apigee Edge.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// First name of the developer.
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    /// Last name of the developer.
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    /// Output only. Last modified time as milliseconds since epoch.
    #[serde(rename = "lastModifiedAt", skip_serializing_if = "Option::is_none")]
    pub last_modified_at: Option<i64>,
    /// Output only. Email of developer that last modified the app.
    #[serde(rename = "lastModifiedBy", skip_serializing_if = "Option::is_none")]
    pub last_modified_by: Option<String>,
    /// Output only. Name of the organization associated with the developer.
    #[serde(rename = "organizationName", skip_serializing_if = "Option::is_none")]
    pub organization_name: Option<String>,
    /// Status of the developer. Valid values are `active` and `inactive`.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<serde_json::Value>,
    /// Username. Not used by Apigee.
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
}

impl Developer {
    /// Developer details.
    pub fn new() -> Developer {
        Developer {
            apps: None,
            attributes: None,
            companies: None,
            created_at: None,
            created_by: None,
            developer_id: None,
            email: None,
            first_name: None,
            last_name: None,
            last_modified_at: None,
            last_modified_by: None,
            organization_name: None,
            status: None,
            username: None,
        }
    }
}


