/*
 * Company apps API
 *
 * A consumer/client app associated with a company entity. For more information,     see <a href=\"https://docs.apigee.com/api-platform/publish/creating-apps-surface-your-api\">Register apps and manage API keys</a>.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CompanyAppCredentials {
    /// List of API products.
    #[serde(rename = "apiProducts", skip_serializing_if = "Option::is_none")]
    pub api_products: Option<Vec<String>>,
    /// List of attributes.
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Vec<String>>,
    /// Consumer API key.
    #[serde(rename = "consumerKey", skip_serializing_if = "Option::is_none")]
    pub consumer_key: Option<String>,
    /// Consumer secret.
    #[serde(rename = "consumerSecret", skip_serializing_if = "Option::is_none")]
    pub consumer_secret: Option<String>,
    /// Time the credentials expire in milliseconds since epoch.
    #[serde(rename = "expiresAt", skip_serializing_if = "Option::is_none")]
    pub expires_at: Option<i32>,
    /// Time the credentials were issued in milliseconds since epoch.
    #[serde(rename = "issuedAt", skip_serializing_if = "Option::is_none")]
    pub issued_at: Option<i32>,
    /// OAuth scopes.
    #[serde(rename = "scopes", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<Vec<String>>,
    /// Status of the credentials.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

impl CompanyAppCredentials {
    pub fn new() -> CompanyAppCredentials {
        CompanyAppCredentials {
            api_products: None,
            attributes: None,
            consumer_key: None,
            consumer_secret: None,
            expires_at: None,
            issued_at: None,
            scopes: None,
            status: None,
        }
    }
}


